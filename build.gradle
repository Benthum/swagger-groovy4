buildscript {
    ext {
        springBootVersion = '2.7.2'
        spockVersion = '2.1-groovy-3.0'
        groovyVersion = '3.0.12'
        springdocVersion = '1.6.9'
        springPluginCoreVersion = '2.0.0.RELEASE'
        springSecurityVersion = '5.7.2'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

plugins {
    id 'groovy'
    id 'war'
    id 'org.springframework.boot' version "${springBootVersion}"
    id 'io.spring.dependency-management' version '1.0.12.RELEASE'
}

war {
    enabled = false
}

archivesBaseName = 'swagger-service'
version = '1.0.0'

sourceCompatibility = 11
targetCompatibility = 11

repositories {
    mavenCentral()
}

configurations {
    providedRuntime
}

bootRun {
    systemProperties['spring.profiles.active'] = System.properties['spring.profiles.active'] ?: 'local'
}

test {
    systemProperties['spring.profiles.active'] = System.properties['spring.profiles.active'] ?: 'local'
    testLogging {
        exceptionFormat = 'full'
    }

    useJUnitPlatform()
}

dependencies {
    implementation("org.springframework.boot:spring-boot-starter-web:${springBootVersion}")
    implementation("org.springframework.boot:spring-boot-starter-actuator:${springBootVersion}")
    implementation("org.springframework.boot:spring-boot-starter-validation:${springBootVersion}")

    implementation("org.springframework.plugin:spring-plugin-core:${springPluginCoreVersion}")
    implementation("org.springdoc:springdoc-openapi-ui:${springdocVersion}")
    implementation("org.springdoc:springdoc-openapi-groovy:${springdocVersion}")

    implementation("org.codehaus.groovy:groovy:${groovyVersion}")
    implementation("org.codehaus.groovy:groovy-json:${groovyVersion}")

    providedRuntime("org.springframework.boot:spring-boot-starter-tomcat:${springBootVersion}")

    testImplementation("org.springframework.boot:spring-boot-starter-test:${springBootVersion}")
    testImplementation("org.spockframework:spock-core:${spockVersion}")
    testImplementation("org.spockframework:spock-spring:${spockVersion}")
    testImplementation('io.github.joke:spock-outputcapture:3.0.0')

    testRuntimeOnly('cglib:cglib-nodep:3.3.0')
    testRuntimeOnly('org.objenesis:objenesis:3.3')
}
